{"version":3,"sources":["components/Header.js","components/ProductInfo.js","components/ProductList.js","components/EventList.js","components/ScrollButton.js","App.js","TopApp.js","serviceWorker.js","index.js"],"names":["Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInstall","e","promptEvent","window","deferredPrompt","prompt","userChoice","then","result","refs","setAttribute","handleRefresh","props","onRefresh","scroll","handleLogin","alert","handleMenu","addEventListener","event","removeAttribute","console","log","react_default","a","createElement","className","href","src","alt","reactjs_popup_es","trigger","id","aria-label","position","onClick","height","ref","hidden","Component","ProductInfo","nextProps","nextState","item","link","target","rel","title","image","mall","mallName","discount","orgPrice","price","React","ProductList","list","data","map","index","components_ProductInfo","key","defaultProps","EventList","_isMounted","state","responsive","updateWindowDimensions","innerWidth","setState","removeEventListener","open","settings","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","adaptiveHeight","variableWidth","autoplay","autoplaySpeed","pauseOnHover","focusOnSelect","centerPadding","lib_default","ScrollButton","intervalId","pageYOffset","clearInterval","scrollStepInPx","setInterval","scrollStep","bind","delayInMs","_this2","scrollToTop","lastPage","pageSize","noMoreProducts","App","products","events","handleScroll","innerHeight","document","body","scrollHeight","documentElement","scrollTop","getProducts","getEvents","axios","get","res","event_list","init","loading","product_list","length","push","_this$state","components_Header","components_EventList","components_ProductList","align","components_ScrollButton","TopApp","es6","react_router","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","react_router_dom","src_TopApp","getElementById","URL","process","origin","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.47da7750.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\n\nclass Header extends Component {\n\n  constructor() {\n    super();\n\n    window.addEventListener('beforeinstallprompt', (event) => {\n      // Stash the event so it can be triggered later.\n      window.deferredPrompt = event;\n      // Remove the 'hidden' class from the install button container\n      this.refs['btnInstall'].removeAttribute('hidden');\n      // divInstall.classList.toggle('hidden', false);\n    });\n\n    window.addEventListener('appinstalled', (event) => {\n      console.log(process.env.PUBLIC_URL + ' App was installed.', event);\n    });\n  }\n\n  //https://developers.google.com/web/fundamentals/codelabs/your-first-pwapp/?hl=ko\n  handleInstall = (e) => {\n    const promptEvent = window.deferredPrompt;\n    if (!promptEvent) {\n      // The deferred prompt isn't available.\n      return;\n    }\n    // Show the install prompt.\n    promptEvent.prompt();\n    // Log the result\n    promptEvent.userChoice.then((result) => {\n      // Reset the deferred prompt variable, since\n      // prompt() can only be called once.\n      window.deferredPrompt = null;\n      // Hide the install button.\n      this.refs['btnInstall'].setAttribute('hidden', true);\n    });\n\n    // e.preventDefault();\n    // this.props.onCreate();\n  };\n\n  handleRefresh = (e) => {\n    this.props.onRefresh(true);\n    window.scroll(0, 0);\n    // e.preventDefault();\n    // this.props.onCreate();\n  };\n\n  handleLogin = (e) => {\n    alert('login');\n  };\n\n  handleMenu = (e) => {\n    alert('menu');\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <div className=\"sc_logo\">\n          <a href={process.env.PUBLIC_URL + '/'}>\n            <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"로고\" />\n          </a>\n        </div>\n        <Popup trigger={<button id=\"btnMenu\" className=\"headerButton\" aria-label=\"메뉴\"/>} position=\"left top\">\n          <div className=\"menuText\">\n          </div>\n          <div className=\"menuText\">Popup content here !!</div>\n          <div className=\"menuText\">Popup content here !!</div>\n          <div className=\"menuText\">Popup content here !!</div>\n          <div className=\"menuText\">Popup content here !!</div>\n        </Popup>\n        <Popup trigger={<button id=\"btnLogin\" className=\"headerButton\" onClick={this.handleLogin} aria-label=\"로그인\"/>} position=\"left top\">\n          <a href={'https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=' + process.env.REACT_APP_NAVER_CLIENTID + '&redirect_uri=' + process.env.REACT_APP_NAVER_CALLBACKURL}>\n            <img height='40' src={process.env.PUBLIC_URL + '/images/naverlogin.png'} alt=\"네이버 아이디로 로그인\" />\n          </a>\n          <a href={'https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=' + process.env.REACT_APP_NAVER_CLIENTID + '&redirect_uri=' + process.env.REACT_APP_NAVER_CALLBACKURL}>\n            <img height='40' src={process.env.PUBLIC_URL + '/images/naverlogout.png'} alt=\"네이버 아이디 로그아웃\" />\n          </a>\n        </Popup>\n        <button id=\"btnInstall\" className=\"headerButton\" ref=\"btnInstall\" onClick={this.handleInstall} aria-label=\"설치\" hidden/>\n        <button id=\"btnRefresh\" className=\"headerButton\" onClick={this.handleRefresh} aria-label=\"새로고침\"/>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass ProductInfo extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    // 수정 상태가 아니고, info 값이 같다면 리렌더링 안함\n    if (nextProps.item === this.props.item) {\n      return false;\n    }\n    // 나머지 경우엔 리렌더링함\n    return true;\n  }\n\n  render(){\n    const { item } = this.props;\n\n    return (\n      <li className=\"item\">\n        <a href={item.link} className=\"anchor\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className=\"image\">\n            <div className=\"thumbnail\"><img alt={item.title} src={item.image}/></div>\n            <div className=\"sticker\">\n              <div className=\"mall\" mall={item.mallName}/>\n            </div>\n          </div>\n          <div className=\"desc\">\n            <p className=\"title\">{item.title}</p>\n            <div className=\"price_area\">\n              <strong className=\"price_desc\">{item.discount}</strong>\n              <span className=\"original_price\">\n                <i className=\"num\">{item.orgPrice}</i>\n              </span>\n              <span className=\"price\">\n                <i className=\"num\">{item.price}</i>\n              </span>\n            </div>\n          </div>\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default ProductInfo;\n","import React, { Component } from 'react';\nimport ProductInfo from './ProductInfo';\n\nclass ProductList extends Component {\n\n  static defaultProps = {\n    data: []\n  };\n\n  render() {\n    const { data } = this.props;\n    const list = data.map(\n      (item, index) => (\n        <ProductInfo key={index} item={item}/>)\n    );\n\n    return (\n      <div className=\"list_area\">\n        <ul className=\"deals\">\n          {list}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ProductList;","import React, { Component } from 'react';\nimport Slider from \"react-slick\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import { Carousel } from 'react-responsive-carousel';\n\nclass EventList extends Component {\n\n  _isMounted = false;\n\n  static defaultProps = {\n    data: []\n  };\n  state = { responsive: true };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    const { responsive } = this.state;\n\n    if (this._isMounted) {\n      if (responsive && window.innerWidth > 640) {\n        this.setState({responsive:false})\n      } else if (!responsive && window.innerWidth <= 640) {\n        this.setState({responsive:true})\n      }\n    }\n  };\n\n  clickBanner(index) {\n    const { data } = this.props;\n    window.open(data[index].link, '_blank');\n  }\n\n  render() {\n    // console.log(\"EventList render()\");\n    const { data } = this.props;\n    const { responsive } = this.state;\n\n    let result, settings;\n\n    if (this._isMounted) {\n      if (!responsive) {\n        settings = {\n          dots: false,\n          infinite: true,\n          speed: 500,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          centerMode: true,\n          // fade: true,\n          adaptiveHeight: true,\n          variableWidth: true,\n          autoplay: true,\n          autoplaySpeed: 3000,\n          pauseOnHover: true,\n          focusOnSelect: false,\n          centerPadding: '100px',\n          className: 'scSlide'\n        };\n\n        result = (\n          <Slider {...settings}>\n            {data.map(\n              (item, index) => {\n                return (\n                  <a href={item.link} key={index} className=\"anchor\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <div className=\"carousel\">\n                      <img className=\"image\" src={item.image} alt={item.link}/>\n                      <div className=\"sticker_evt\">\n                        <div className=\"mall\" mall={item.mallName}/>\n                      </div>\n                    </div>\n                  </a>\n                )\n              }\n            )}\n          </Slider>\n        );\n      } else {\n        result = (<div/>);\n        // settings = {\n        //   autoPlay: true,\n        //   infiniteLoop: true,\n        //   showThumbs: false,\n        //   dynamicHeight: true\n        // };\n        //\n        // result = (\n        //   <Carousel {...settings} onClickItem={(index) => { this.clickBanner(index); }}>\n        //     {data.map(\n        //       (item, index) => {\n        //         return (\n        //           <div className=\"carousel\" key={index}>\n        //             <img key={index} className=\"image\" src={item.image} alt={item.mallName}/>\n        //             <div className=\"sticker_evt\">\n        //               <div className=\"mall\" mall={item.mallName}/>\n        //             </div>\n        //           </div>\n        //         )\n        //       }\n        //     )}\n        //   </Carousel>\n        // );\n      }\n    } else {\n      result = (<div/>);\n    }\n    return result;\n  }\n}\n\nexport default EventList;\n","import React from 'react';\n\nclass ScrollButton extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop(e) {\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n    this.setState({ intervalId: intervalId });\n  }\n\n  render () {\n    return <button title='Back to top' className='scroll'\n                   onClick={ () => { this.scrollToTop(this); }}/>\n  }\n}\n\nexport default ScrollButton;\n","import React, { Component } from 'react';\nimport './sc.css';\n\nimport axios from 'axios';\nimport Header from \"./components/Header\";\nimport ProductList from \"./components/ProductList\";\nimport EventList from \"./components/EventList\";\nimport ScrollButton from \"./components/ScrollButton\";\n\nlet lastPage=0;\nlet pageSize=20;\nlet noMoreProducts=false;\n\nclass App extends Component {\n\n  state = {\n    products: null,\n    events: null\n  };\n\n  componentDidMount() {\n    this.setState({loading:true} );\n    this.getEvents();\n    this.getProducts(true);\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const { innerHeight } = window;\n    const { scrollHeight } = document.body;\n    // IE에서는 document.documentElement 를 사용.\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      this.getProducts(false);\n    }\n  };\n\n  getEvents = () => {\n    axios.get('https://api.smartconsumer.kr/api/getEvents?&size=' + pageSize)\n      .then(res => {\n        const event_list = res.data;\n        this.setState({ events: event_list});\n      });\n  };\n\n  getProducts = (init) => {\n    const { products } = this.state;\n\n    if (!noMoreProducts) {\n      this.setState({loading:true} );\n      if (products && !init) {\n        axios.get('https://api.smartconsumer.kr/api/getProducts?page=' + (lastPage+1) + '&size=' + pageSize)\n          .then(res => {\n            const product_list = res.data;\n            if (product_list.products.length > 0) {\n              product_list.products.map(item =>\n                products.products.push(item)\n              );\n              this.setState({\n                products: products\n              });\n            } else {\n              noMoreProducts = true;\n            }\n          });\n      } else {\n        lastPage = 0;\n        axios.get('https://api.smartconsumer.kr/api/getProducts?page=' + (lastPage+1) + '&size=' + pageSize)\n          .then(res => {\n            const product_list = res.data;\n            this.setState({ products: product_list});\n          });\n      }\n      this.setState({loading:false});\n\n      if (!noMoreProducts) {\n        lastPage = lastPage + 1;\n      }\n    }\n  };\n  \n  render() {\n    const { products, events, loading } = this.state;\n    return (\n      <div>\n        <Header onRefresh={this.getProducts}/>\n        <main>\n          <div className=\"home\">\n            {\n              events &&\n              <EventList\n                data={events.products}\n              />\n            }\n            {\n              products &&\n              <ProductList\n                data={products.products}\n              />\n            }\n            <h1 align=\"center\" hidden={!loading}>상품정보를 불러오고 있습니다...</h1>\n          </div>\n          <ScrollButton scrollStepInPx=\"200\" delayInMs=\"0\"/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'\nimport { CookiesProvider } from 'react-cookie';\nimport App from './App';\n\nclass TopApp extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <div className=\"TopApp\">\n          <Switch>\n            <Route path=\"/\" exact component={App}/>\n            <Route component={App} />\n          </Switch>\n        </div>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default TopApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n//cache\n//https://medium.com/progressive-web-apps/react-progressive-web-apps-part-2-d55c6bd4b316\n\n//service worker cookbook\n//https://serviceworke.rs\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  console.log(\"register()\");\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log(\"registerValidSW()\");\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        console.log('onUpdateFound');\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TopApp from './TopApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <TopApp />\n  </BrowserRouter>, document.getElementById('wrap')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}